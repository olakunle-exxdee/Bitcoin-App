{"version":3,"sources":["component/List.js","component/ItemCryto.js","chartConfig/chartConfigs.js","component/HistoryChart.js","api/coinGecko.js","component/CoinData.js","component/ListDetails.js","App.js","index.js"],"names":["List","symbol","name","id","image","className","alt","src","data-holder-rendered","type","to","ItemBitcoin","useState","data","setData","search","setSearch","isLoading","setIsLoading","override","css","fetchBitcoin","a","fetch","response","json","useEffect","filterCoins","filter","item","toLowerCase","includes","color","loading","size","placeholder","aria-label","onChange","e","target","value","map","coin","historyOPtion","lineHeightAnnotation","always","hover","lineWeight","animation","duration","maintainAspectRatio","responsive","scales","xAxes","distribution","HistoryChart","chartRef","useRef","day","week","year","detail","timeFormat","setTimeFormat","determineTImeFormat","current","Chartjs","datasets","label","backgroundColor","borderColor","pointRadius","options","current_price","toFixed","price_change_24h","price_change_percentage_24h","renderPrice","ref","width","height","onClick","axios","create","baseURL","CoinData","market_cap","total_supply","total_volume","high_24h","circulating_supply","low_24h","renderData","ListDetails","match","coinData","setCoinData","formatData","el","t","y","Promise","all","coinGecko","get","params","vs_currency","days","ids","prices","fetchData","App","path","exact","component","ItemCryto","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.44fe5d23.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst List = ({ symbol, name, id, image }) => {\r\n  return (\r\n    <div className=\"col-md-4 text-center mt-1\">\r\n      <div className=\"card mb-4 box-shadow bg-light mt-2 outline-danger\">\r\n        <img\r\n          className=\" w-25  img-fluid  mx-auto \"\r\n          alt={symbol}\r\n          src={image}\r\n          data-holder-rendered=\"true\"\r\n        ></img>\r\n        <div className=\"card-body\">\r\n          <p className=\"h1 text-dark\">{name}</p>\r\n          <div className=\"d-flex justify-content-between align-items-center\">\r\n            <div className=\"btn-group mx-auto my-2\">\r\n              <Link\r\n                type=\"button\"\r\n                className=\"btn btn-lg btn-outline-primary \"\r\n                to={`/items/${id}`}\r\n              >\r\n                Details\r\n              </Link>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default List;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport List from \"./List\";\r\nimport MoonLoader from \"react-spinners/ClipLoader\";\r\nimport { css } from \"@emotion/react\";\r\n\r\nconst ItemBitcoin = () => {\r\n  const [data, setData] = useState([]);\r\n  const [search, setSearch] = useState(\"\");\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const url =\r\n    \"https://api.coingecko.com/api/v3/coins/markets?vs_currency=usd&order=market_cap_desc&per_page=50&page=1&sparkline=false\";\r\n\r\n  const override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: blue;\r\n  `;\r\n  const fetchBitcoin = async () => {\r\n    setIsLoading(true);\r\n    const response = await fetch(url);\r\n    const data = await response.json();\r\n    setData(data);\r\n    setIsLoading(false);\r\n  };\r\n  useEffect(() => {\r\n    fetchBitcoin();\r\n    return () => {\r\n      setData([]);\r\n    };\r\n  }, []);\r\n\r\n  const handleChange = (e) => {\r\n    setSearch(e.target.value);\r\n  };\r\n  const filterCoins = data.filter((item) =>\r\n    item.name.toLowerCase().includes(search.toLowerCase())\r\n  );\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loader\">\r\n        <MoonLoader\r\n          color=\"blue\"\r\n          css={override}\r\n          loading={isLoading}\r\n          size={150}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n  return (\r\n    <>\r\n      <form className=\"form my-4\">\r\n        <div className=\"form-group w-50 mx-auto  form-sm\">\r\n          <input\r\n            className=\"form-control \"\r\n            type=\"text\"\r\n            placeholder=\"Search\"\r\n            aria-label=\"default input example\"\r\n            onChange={handleChange}\r\n          />\r\n        </div>\r\n      </form>\r\n\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {filterCoins.map((coin) => {\r\n            return <List key={coin.id} {...coin} />;\r\n          })}\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ItemBitcoin;\r\n","export const historyOPtion = {\r\n  lineHeightAnnotation: {\r\n    always: true,\r\n    hover: false,\r\n    lineWeight: 1.5,\r\n  },\r\n  animation: {\r\n    duration: 2000,\r\n  },\r\n  maintainAspectRatio: false,\r\n  responsive: true,\r\n  scales: {\r\n    xAxes: [\r\n      {\r\n        type: \"time\",\r\n        distribution: \"linear\",\r\n      },\r\n    ],\r\n  },\r\n};\r\n","import React, { useEffect, useRef, useState } from \"react\";\r\nimport Chartjs from \"chart.js\";\r\nimport { historyOPtion } from \"../chartConfig/chartConfigs\";\r\n\r\nconst HistoryChart = ({ data }) => {\r\n  const chartRef = useRef();\r\n  const { day, week, year, detail } = data;\r\n  const [timeFormat, setTimeFormat] = useState(\"24h\");\r\n\r\n  const determineTImeFormat = () => {\r\n    switch (timeFormat) {\r\n      case \"24h\":\r\n        return day;\r\n      case \"7d\":\r\n        return week;\r\n      case \"1y\":\r\n        return year;\r\n      default:\r\n        return day;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (chartRef && chartRef.current && detail) {\r\n      const chartInstance = new Chartjs(chartRef.current, {\r\n        type: \"line\",\r\n        data: {\r\n          datasets: [\r\n            {\r\n              label: `${detail.name} Price`,\r\n              data: determineTImeFormat(),\r\n              backgroundColor: \"rgba(137, 196, 244, 0.8)\",\r\n              borderColor: \"rgba(137, 196, 244, 0.2)\",\r\n              pointRadius: 0,\r\n            },\r\n          ],\r\n        },\r\n        options: {\r\n          ...historyOPtion,\r\n        },\r\n      });\r\n    }\r\n  });\r\n\r\n  const renderPrice = () => {\r\n    if (detail) {\r\n      return (\r\n        <>\r\n          <p className=\"my-0 text-dark\">\r\n            Current-Price: ${detail.current_price.toFixed(2)}\r\n          </p>\r\n          <p\r\n            className={\r\n              detail.price_change_24h < 0\r\n                ? \"text-danger my-1\"\r\n                : \"text-success my-1\"\r\n            }\r\n          >\r\n            Price-Change24hrs: {detail.price_change_24h.toFixed(2)}\r\n          </p>\r\n          <p\r\n            className={\r\n              detail.price_change_percentage_24h < 0\r\n                ? \"text-danger my-0\"\r\n                : \"text-success my-0\"\r\n            }\r\n          >\r\n            Price-Change%: {detail.price_change_percentage_24h.toFixed(2)}%\r\n          </p>\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"bg-white border mt-2 rounded p-3 \">\r\n      <div className=\"\">{renderPrice()}</div>\r\n      <div>\r\n        <canvas ref={chartRef} id=\"myChart\" width={250} height={250}></canvas>\r\n      </div>\r\n      <div className=\"chart-btn mt-1\">\r\n        <button\r\n          onClick={() => setTimeFormat(\"24h\")}\r\n          className=\"btn btn-outline-primary btn\"\r\n        >\r\n          24hrs\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"7d\")}\r\n          className=\"btn btn-outline-primary btn mx-1\"\r\n        >\r\n          7days\r\n        </button>\r\n        <button\r\n          onClick={() => setTimeFormat(\"1y\")}\r\n          className=\"btn btn-outline-primary btn\"\r\n        >\r\n          1year\r\n        </button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryChart;\r\n","import axios from \"axios\";\r\n\r\nexport default axios.create({\r\n  baseURL: \"https://api.coingecko.com/api/v3\",\r\n});\r\n","import React from \"react\";\r\n\r\nconst CoinData = ({ data }) => {\r\n  const renderData = () => {\r\n    if (data) {\r\n      return (\r\n        <div className=\"bg-white text-dark mt-3 p-2 rounded border row  \">\r\n          <div className=\"col-sm\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"h4 coin-data-category my-2\">Market Cap</span>\r\n              <span>{data.market_cap}</span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"h4 coin-data-category my-2\">Total Supply</span>\r\n              <span>{data.total_supply}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-sm\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"h4 coin-data-category my-2\">Volume(24H)</span>\r\n              <span>{data.total_volume}</span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"h4 coin-data-category my-2\">high 24h</span>\r\n              <span>{data.high_24h}</span>\r\n            </div>\r\n          </div>\r\n\r\n          <div className=\"col-sm\">\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"h4 coin-data-category my-2\">\r\n                Circulating Supply\r\n              </span>\r\n              <span>{data.circulating_supply}</span>\r\n            </div>\r\n            <hr />\r\n            <div className=\"d-flex flex-column\">\r\n              <span className=\"h4 coin-data-category my-2\">low 24h</span>\r\n              <span>{data.low_24h}</span>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n  };\r\n\r\n  return <div>{renderData()}</div>;\r\n};\r\n\r\nexport default CoinData;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport HistoryChart from \"./HistoryChart\";\r\nimport coinGecko from \"../api/coinGecko\";\r\nimport MoonLoader from \"react-spinners/ClipLoader\";\r\nimport { css } from \"@emotion/react\";\r\nimport CoinData from \"./CoinData\";\r\n\r\nconst ListDetails = ({ match }) => {\r\n  const [coinData, setCoinData] = useState({});\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const formatData = (data) => {\r\n    return data.map((el) => {\r\n      return {\r\n        t: el[0],\r\n        y: el[1].toFixed(2),\r\n      };\r\n    });\r\n  };\r\n\r\n  const override = css`\r\n    display: block;\r\n    margin: 0 auto;\r\n    border-color: blue;\r\n  `;\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      setIsLoading(true);\r\n      const [day, week, year, detail] = await Promise.all([\r\n        coinGecko.get(`/coins/${match.params.id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: \"usd\",\r\n            days: \"1\",\r\n          },\r\n        }),\r\n        coinGecko.get(`/coins/${match.params.id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: \"usd\",\r\n            days: \"7\",\r\n          },\r\n        }),\r\n        coinGecko.get(`/coins/${match.params.id}/market_chart/`, {\r\n          params: {\r\n            vs_currency: \"usd\",\r\n            days: \"365\",\r\n          },\r\n        }),\r\n        coinGecko.get(\"/coins/markets/\", {\r\n          params: {\r\n            vs_currency: \"usd\",\r\n            ids: match.params.id,\r\n          },\r\n        }),\r\n      ]);\r\n      setCoinData({\r\n        day: formatData(day.data.prices),\r\n        week: formatData(week.data.prices),\r\n        year: formatData(year.data.prices),\r\n        detail: detail.data[0],\r\n      });\r\n      setIsLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [match.params.id]);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"loader\">\r\n        <MoonLoader\r\n          color=\"blue\"\r\n          css={override}\r\n          loading={isLoading}\r\n          size={150}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <Link type=\"button\" className=\"btn btn-primary btn-lg\" to={`/`}>\r\n        Back\r\n      </Link>\r\n      <HistoryChart data={coinData} />\r\n      <CoinData data={coinData.detail} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ListDetails;\r\n","import { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\r\nimport \"./App.css\";\r\nimport ItemCryto from \"./component/ItemCryto\";\r\nimport ListDetails from \"./component/ListDetails\";\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route path=\"/\" exact component={ItemCryto} />\r\n        <Route path=\"/items/:id\" component={ListDetails} />\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}